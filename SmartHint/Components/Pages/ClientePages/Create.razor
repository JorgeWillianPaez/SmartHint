@page "/clientes/create"
@inject SmartHint.Data.SmartHintDbContext DB
@using SmartHint.Models
@inject NavigationManager NavigationManager

<PageTitle>Cliente</PageTitle>

<h2>Cadastrar cliente</h2>

<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Cliente" OnValidSubmit="AddCliente" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="nomeclienterazaosocial" class="form-label">Nome do Cliente/Razão Social:</label> 
                <InputText id="nomeclienterazaosocial" @bind-Value="Cliente.NomeClienteRazaoSocial" class="form-control" /> 
                <ValidationMessage For="() => Cliente.NomeClienteRazaoSocial" class="text-danger" /> 
            </div>
            <div class="mb-3">
                <label for="email" class="form-label">E-mail:</label> 
                <InputText id="email" @bind-Value="Cliente.Email" class="form-control" type="email" />
                <ValidationMessage For="() => Cliente.Email" class="text-danger" /> 
            </div>
            <div class="mb-3">
                <label for="telefone" class="form-label">Telefone:</label> 
                <InputText id="telefone" @bind-Value="Cliente.Telefone" class="form-control" /> 
                <ValidationMessage For="() => Cliente.Telefone" class="text-danger" /> 
            </div>
            <div class="mb-3">
                <label for="tipopessoa" class="form-label">Tipo de Pessoa:</label> 
                <InputSelect id="tipopessoa" @bind-Value="Cliente.TipoPessoa" class="form-control">
                    <option value="Física">Física</option>
                    <option value="Jurídica">Jurídica</option>
                </InputSelect>
                <ValidationMessage For="() => Cliente.TipoPessoa" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="cpfcnpj" class="form-label">CPF/CNPJ:</label> 
                <InputText id="cpfcnpj" @bind-Value="Cliente.CPFCNPJ" class="form-control" /> 
                <ValidationMessage For="() => Cliente.CPFCNPJ" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="inscricaoestadual" class="form-label">Inscrição Estadual:</label> 
                <InputText id="inscricaoestadual" @bind-Value="Cliente.InscricaoEstadual" class="form-control" /> 
                <ValidationMessage For="() => Cliente.InscricaoEstadual" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="isento" class="form-label">Isento:</label> 
                <InputCheckbox id="isento" @bind-Value="Cliente.Isento" class="form-check-input" /> 
                <ValidationMessage For="() => Cliente.Isento" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="genero" class="form-label">Gênero:</label> 
                <InputSelect id="genero" @bind-Value="Cliente.Genero" class="form-control">
                    <option value="Masculino">Masculino</option>
                    <option value="Feminino">Feminino</option>
                </InputSelect>
                <ValidationMessage For="() => Cliente.Genero" class="text-danger" /> 
            </div>       
            <div class="mb-3">
                <label for="bloqueado" class="form-label">Bloqueado:</label> 
                <InputCheckbox id="bloqueado" @bind-Value="Cliente.Bloqueado" class="form-check-input" /> 
                <ValidationMessage For="() => Cliente.Bloqueado" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="senha" class="form-label">Senha:</label> 
                <InputText id="senha" @bind-Value="Cliente.Senha" class="form-control" type="password" />
                <ValidationMessage For="() => Cliente.Senha" class="text-danger" /> 
            </div>
            <button type="submit" class="btn btn-primary">Adicionar Cliente</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/">Voltar para lista</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Cliente Cliente { get; set; } = new();

    public async Task AddCliente()
    {
        DB.Clientes.Add(Cliente);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/");
    }
}
